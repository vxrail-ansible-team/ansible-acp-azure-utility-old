# coding: utf-8

"""
    Dell APEX Cloud Platform for Microsoft Azure REST API

    Dell APEX Cloud Platform REST API provides a programmatic interface for performing administrative tasks on Dell APEX Cloud Platform for Microsoft Azure. The data is available in JSON format.  # noqa: E501

    OpenAPI spec version: 1.0.000
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ACPAzureSystemInitSpecWitness(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type': 'str',
        'account_name': 'str',
        'access_key': 'str',
        'file_share_path': 'str',
        'azure_service_endpoint': 'str'
    }

    attribute_map = {
        'type': 'type',
        'account_name': 'account_name',
        'access_key': 'access_key',
        'file_share_path': 'file_share_path',
        'azure_service_endpoint': 'azure_service_endpoint'
    }

    def __init__(self, type=None, account_name=None, access_key=None, file_share_path=None, azure_service_endpoint=None):  # noqa: E501
        """ACPAzureSystemInitSpecWitness - a model defined in Swagger"""  # noqa: E501
        self._type = None
        self._account_name = None
        self._access_key = None
        self._file_share_path = None
        self._azure_service_endpoint = None
        self.discriminator = None
        if type is not None:
            self.type = type
        if account_name is not None:
            self.account_name = account_name
        if access_key is not None:
            self.access_key = access_key
        if file_share_path is not None:
            self.file_share_path = file_share_path
        if azure_service_endpoint is not None:
            self.azure_service_endpoint = azure_service_endpoint

    @property
    def type(self):
        """Gets the type of this ACPAzureSystemInitSpecWitness.  # noqa: E501

        Specify type of witness for the cluster. The supported values are Cloud and FileShare.  # noqa: E501

        :return: The type of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ACPAzureSystemInitSpecWitness.

        Specify type of witness for the cluster. The supported values are Cloud and FileShare.  # noqa: E501

        :param type: The type of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :type: str
        """
        allowed_values = ["CLOUD", "FILE_SHARE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def account_name(self):
        """Gets the account_name of this ACPAzureSystemInitSpecWitness.  # noqa: E501

        Specify the Azure Storage Account name used for cloud witness.  # noqa: E501

        :return: The account_name of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this ACPAzureSystemInitSpecWitness.

        Specify the Azure Storage Account name used for cloud witness.  # noqa: E501

        :param account_name: The account_name of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :type: str
        """

        self._account_name = account_name

    @property
    def access_key(self):
        """Gets the access_key of this ACPAzureSystemInitSpecWitness.  # noqa: E501

        Specify the access key of Azure storage account for cloud witness.  # noqa: E501

        :return: The access_key of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :rtype: str
        """
        return self._access_key

    @access_key.setter
    def access_key(self, access_key):
        """Sets the access_key of this ACPAzureSystemInitSpecWitness.

        Specify the access key of Azure storage account for cloud witness.  # noqa: E501

        :param access_key: The access_key of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :type: str
        """

        self._access_key = access_key

    @property
    def file_share_path(self):
        """Gets the file_share_path of this ACPAzureSystemInitSpecWitness.  # noqa: E501

        Specify the fileshare path for the local witness for the cluster.  # noqa: E501

        :return: The file_share_path of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :rtype: str
        """
        return self._file_share_path

    @file_share_path.setter
    def file_share_path(self, file_share_path):
        """Sets the file_share_path of this ACPAzureSystemInitSpecWitness.

        Specify the fileshare path for the local witness for the cluster.  # noqa: E501

        :param file_share_path: The file_share_path of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :type: str
        """

        self._file_share_path = file_share_path

    @property
    def azure_service_endpoint(self):
        """Gets the azure_service_endpoint of this ACPAzureSystemInitSpecWitness.  # noqa: E501

        Optional endpoint if different from core.windows.net  # noqa: E501

        :return: The azure_service_endpoint of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :rtype: str
        """
        return self._azure_service_endpoint

    @azure_service_endpoint.setter
    def azure_service_endpoint(self, azure_service_endpoint):
        """Sets the azure_service_endpoint of this ACPAzureSystemInitSpecWitness.

        Optional endpoint if different from core.windows.net  # noqa: E501

        :param azure_service_endpoint: The azure_service_endpoint of this ACPAzureSystemInitSpecWitness.  # noqa: E501
        :type: str
        """

        self._azure_service_endpoint = azure_service_endpoint

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ACPAzureSystemInitSpecWitness, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ACPAzureSystemInitSpecWitness):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
